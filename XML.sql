CREATE OR REPLACE DIRECTORY APP_CONTAINER AS 'C:/app';

create or replace procedure ExportSuppliersXML AS
    DOC DBMS_XMLDOM.DOMDocument;
    XDATA XMLTYPE;
    CURSOR XMLCUR IS
    SELECT XMLELEMENT("SUPPLIERS",
    XMLAttributes('http://www.w3.org/2001/XMLSchema' AS "xmlns:xsi",
    'http://www.oracle.com/Users.xsd' AS "xsi:nonamespaceSchemaLocation"),
    XMLAGG(XMLELEMENT("SUPPLIER",
    xmlelement("ID", SUPPLIERS.ID),
    xmlelement("NAME", SUPPLIERS.NAME),
    xmlelement("ADDRESS", SUPPLIERS.ADDRESS),
    xmlelement("PHONE_NUMBER", SUPPLIERS.PHONE_NUMBER)
    ))) from SUPPLIERS;
begin
    open xmlcur;
    loop
        fetch xmlcur into xdata;
        exit when xmlcur%notfound;
    end loop;
    close xmlcur;

    DOC := DBMS_XMLDOM.NewDOMDocument(XDATA);
    DBMS_XMLDOM.WRITETOFILE(DOC, 'APP_CONTAINER/SUPPLIERS.xml');
END;

begin
    ExportSuppliersXML();
end;

CREATE OR REPLACE PROCEDURE ImportSuppliersXml AS
    L_CLOB CLOB;
    L_BFILE BFILE := BFILENAME('APP_CONTAINER', 'SUPPLIERS.xml');

    L_DEST_OFFSET INTEGER := 1;
    L_SRC_OFFSET INTEGER := 1;
    L_BFILE_CSID NUMBER := 0;
    L_LANG_CONTEXT INTEGER := 0;
    L_WARNING INTEGER := 0;

    P DBMS_XMLPARSER.PARSER;
    v_doc dbms_xmldom.domdocument;
    v_root_element dbms_xmldom.domelement;
    V_CHILD_NODES DBMS_XMLDOM.DOMNODELIST;
    V_CURRENT_NODE DBMS_XMLDOM.DOMNODE;

    et SUPPLIERS%rowtype;
begin
    DBMS_LOB.CREATETEMPORARY (L_CLOB, TRUE);
    DBMS_LOB.FILEOPEN(L_BFILE, DBMS_LOB.FILE_READONLY);

    DBMS_LOB.LOADCLOBFROMFILE (DEST_LOB => L_CLOB, SRC_BFILE => L_BFILE, AMOUNT => DBMS_LOB.LOBMAXSIZE,
    DEST_OFFSET => L_DEST_OFFSET, SRC_OFFSET => L_SRC_OFFSET, BFILE_CSID => L_BFILE_CSID,
    LANG_CONTEXT => L_LANG_CONTEXT, WARNING => L_WARNING);
    DBMS_LOB.FILECLOSE(L_BFILE);
    COMMIT;

    P := Dbms_Xmlparser.Newparser;
    DBMS_XMLPARSER.PARSECLOB(P, L_CLOB);
    V_DOC := DBMS_XMLPARSER.GETDOCUMENT(P);
    V_ROOT_ELEMENT := DBMS_XMLDOM.Getdocumentelement(v_Doc);
    V_CHILD_NODES := DBMS_XMLDOM.GETCHILDRENBYTAGNAME(V_ROOT_ELEMENT,'*');

    FOR i IN 0 .. DBMS_XMLDOM.GETLENGTH(V_CHILD_NODES) - 1
    LOOP
        V_CURRENT_NODE := DBMS_XMLDOM.ITEM(V_CHILD_NODES,i);

        DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE,
        'id/text()',et.ID);
        DBMS_XSLPROCESSOR.VALUEOF(V_Current_Node,
        'transmission/text()',et.NAME);
        DBMS_XSLPROCESSOR.VALUEOF(V_Current_Node,
        'salon/text()',et.ADDRESS);
        DBMS_XSLPROCESSOR.VALUEOF(v_current_node,
        'stereo_system/text()',et.PHONE_NUMBER);

        INSERT INTO SUPPLIERS(NAME, ADDRESS, PHONE_NUMBER)
        VALUES(et.NAME, et.ADDRESS, et.PHONE_NUMBER);
    END LOOP;

    DBMS_LOB.FREETEMPORARY(L_CLOB);
    DBMS_XMLPARSER.FREEPARSER(P);
    DBMS_XMLDOM.FREEDOCUMENT(V_DOC);
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE ImportSuppliersXml AS
    L_CLOB CLOB;
    L_BFILE BFILE := BFILENAME('APP_CONTAINER', 'SUPPLIERS.xml');

    L_DEST_OFFSET INTEGER := 1;
    L_SRC_OFFSET INTEGER := 1;
    L_BFILE_CSID NUMBER := 0;
    L_LANG_CONTEXT INTEGER := 0;
    L_WARNING INTEGER := 0;

    P DBMS_XMLPARSER.PARSER;
    v_doc dbms_xmldom.domdocument;
    v_root_element dbms_xmldom.domelement;
    V_CHILD_NODES DBMS_XMLDOM.DOMNODELIST;
    V_CURRENT_NODE DBMS_XMLDOM.DOMNODE;

    et SUPPLIERS%rowtype;
begin
    DBMS_LOB.CREATETEMPORARY (L_CLOB, TRUE);
    DBMS_LOB.FILEOPEN(L_BFILE, DBMS_LOB.FILE_READONLY);

    DBMS_LOB.LOADCLOBFROMFILE (DEST_LOB => L_CLOB, SRC_BFILE => L_BFILE, AMOUNT => DBMS_LOB.LOBMAXSIZE,
    DEST_OFFSET => L_DEST_OFFSET, SRC_OFFSET => L_SRC_OFFSET, BFILE_CSID => L_BFILE_CSID,
    LANG_CONTEXT => L_LANG_CONTEXT, WARNING => L_WARNING);
    DBMS_LOB.FILECLOSE(L_BFILE);
    COMMIT;

    P := Dbms_Xmlparser.Newparser;
    DBMS_XMLPARSER.PARSECLOB(P, L_CLOB);
    V_DOC := DBMS_XMLPARSER.GETDOCUMENT(P);
    V_ROOT_ELEMENT := DBMS_XMLDOM.Getdocumentelement(v_Doc);
    V_CHILD_NODES := DBMS_XMLDOM.GETCHILDRENBYTAGNAME(V_ROOT_ELEMENT,'*');

    FOR i IN 0 .. DBMS_XMLDOM.GETLENGTH(V_CHILD_NODES) - 1
    LOOP
        V_CURRENT_NODE := DBMS_XMLDOM.ITEM(V_CHILD_NODES,i);

        DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE,
        'ID/text()',et.ID);
        DBMS_XSLPROCESSOR.VALUEOF(V_Current_Node,
        'NAME/text()',et.NAME);
        DBMS_XSLPROCESSOR.VALUEOF(V_Current_Node,
        'ADDRESS/text()',et.ADDRESS);
        DBMS_XSLPROCESSOR.VALUEOF(v_current_node,
        'PHONE_NUMBER/text()',et.PHONE_NUMBER);

        INSERT INTO SUPPLIERS(NAME, ADDRESS, PHONE_NUMBER)
        VALUES(et.NAME, et.ADDRESS, et.PHONE_NUMBER);
    END LOOP;

    DBMS_LOB.FREETEMPORARY(L_CLOB);
    DBMS_XMLPARSER.FREEPARSER(P);
    DBMS_XMLDOM.FREEDOCUMENT(V_DOC);
    COMMIT;
END;

BEGIN
    ImportSuppliersXml();
END;

SELECT * FROM SUPPLIERS;

DROP PROCEDURE ExportSuppliersXML;
DROP PROCEDURE ImportSuppliersXml;